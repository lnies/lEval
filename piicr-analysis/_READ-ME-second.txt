### ### ### Changelog

2016-11-16: V-0.1-aplha:
This is a preliminary version of the readout software. It will be updated soon.

2016-11-18: V-0.2-aplha:
The 'PI-ICR_DAQ.py' version (= V-0.1) is still available. I'm currently working
on a proper written and much faster version. Right now, I'm working on the
'...time-optimized.py' file which already is much faster (35 vs 9 seconds) for
the whole cycle and contains the darkcount loop (see line 9 variable trigger_on_off)
as well as a condition for the time windows (there were some issues with data
sets which contained no 'clear_one' delay line signals. Therefore see line 10)
These parts can already be used via 'run current cell'. Soon added will be a
faster way for the histogram plots (1D already ~20 times faster), a peak fit
for the histogram plot (which is dependent on the found number of peaks) and in
the far future a self updating = live DAQ (would increase the speed by a huge
factor and would allow including it into the LabView software).

2016-11-21: V-0.3-aplha:
Added Peakfindingfunction and Gaussian Fits to all real peaks, plotted in now
new "real" 1D Histogram Plots for both X and Y. Also changed the simple plot
with semi-transparent points, where the color of overlying points adds. Decided
to keep both the real histograms on top and on the right of the 2D Histogram as
well as the "new, unreal-real" histograms. They include fit and fit-parameter
data (and look nice).

2016-12-16: V-0.4-aplha:
Quite some things have been added:
- There are now two versions, one is still called __*-time-optimized.py and the
  new one is now called '__PI-ICR_DAQ-time-optimized-all-txt-files.py'. The
  second one is perfectly suited, when you don't want only one file to be
  analyzed, but all *.txt files in the folder, that you have to write in line 46.
- Spot_positions are now saved in a .csv file in the same folder, which means
  that you can also FIT all MCP-hits afterwards without calculating the positions
  on the detector.
- In the batch processing version the fitted X-Projection-Positions and
  Y-Projection-Positions (with errors) of the peaks are now saved in a .CSV file
  as well. Each line stands for one analyzed .txt file (so normally for p1/p2/c)
  with the following format: file_name,X,Xerr,Y,Yerr\n
- If an error occurs in the batch processing file (e.g. due to crappy data) this
  file for which the error occurs will be skipped but the whole process
  CONTINUES!!! (proud of this implementation! :-) At the end the number of
  skipped files will be printed out as well as an error printout with the
  name of the skipped file.
- in the category 'variables you can change' you will find some options for
  different purposes, e.g. dont_show excludes the showing of the plots
  (important for the new batch processing version); pattern allows you to
  change the processing for different ways of data taking (p1 and p2 in one
  file --> go for pattern = 1 respectively 2; p1,p2,c in different files
  --> go for pattern = 3); peak_finder_plot allows you to show the plots with
  the marked and found peaks. This is helpful if you want to change the
  properties of the peak finder function.
- A mask has beed added which means, that now a matrix of the same size as the
  (timing)-data-matrix (=measured data) is initialized with zeros for each
  position. If a time was used for a real event, then the 0 is replaced by a 1.
  If there is a 1 at a certain position, this time cannot be used again.
  (necessary for the reconstruction process)
- Reconstruction has been added! This Reconstruction takes place in two steps,
  in the first step peaks are identified with only 3 matching delayline signals
  and one matching MCP signal. The reconstruction is normally in the order
  of 5-30 % of the clear events. In the second step peaks are then identified
  with only 2 matching delayline signals (one for X and one for Y) and one
  matching MCP signal. This reconstruction increases the amount of matches by
  ca. 5 %.
- The console output has now been optimized.

2017-01-12: V-0.5-aplha:
- Much better 2d histograms not BUT problems with fitting then due to much
  smaller bin size

2017-01-20: V-0.6-aplha:
- Cutting for fits of projections now possible. With x/y_fit_max/min you can
  now select the range (from 0 to 1) of each projection which will be fitted.
  With that option you can increase the precision of the fit when there are
  two or more spots.

2017-01-27: V-0.7-aplha:
- Shows now two different 2D histograms. One overview with detector size and
  one zoomed for fitting. The projection histograms with fits have now also
  an approximate metric scale (mm) at the x-axis. Furthermore a TOF-plot was
  added allowing cuts in the TOF regime. Moreover a ioncloud reconstruction
  with 2D histogram and TOF was added.

2017-02-14: V-1.0-aplha:
- Uff, big upgrade yesterday (14.02.17): Converted everything into functions
  and exported them into different files.


### ### ### Comments for Jonas:

- Please add a routine, that checks for new entries in the input file and only
  calculates the necessary things for new data (should decrease the calculation
  time by a huge factor) -- JK
- Please include TOF-cut into reconstruction loops


### ### ### Needed Packages:

- Anaconda (Python 2.7)
- Peakutils (https://pypi.python.org/pypi/PeakUtils)
- Maximum likelihood estimation (https://github.com/ibab/python-mle)

### ### ### Needed *.txt format:

number-of-time-stamps-in-this-line   time-stamps-X1--delay-line   ...
number-of-time-stamps-in-this-line   time-stamps-X2--delay-line   ...
number-of-time-stamps-in-this-line   time-stamps-Y1--delay-line   ...
number-of-time-stamps-in-this-line   time-stamps-Y2--delay-line   ...
number-of-time-stamps-in-this-line   time-stamps-MCP-delay-line   ...
...
